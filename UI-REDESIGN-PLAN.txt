╔════════════════════════════════════════════════════════════╗
║                                                            ║
║        🎨 UI REDESIGN PLAN - *ARR STYLE LAYOUT             ║
║                                                            ║
╚════════════════════════════════════════════════════════════╝

✅ COMPLETED SO FAR
═══════════════════════════════════════════════════════════

Backend:
  ✓ POST /api/containers/{name}/start
  ✓ POST /api/containers/{name}/stop
  ✓ POST /api/containers/{name}/restart

CSS:
  ✓ Light mode variables added
  ✓ Sidebar navigation styles
  ✓ Top bar styles
  ✓ Mobile responsive layout
  ✓ Theme toggle component

React:
  ✓ Theme state management
  ✓ Theme toggle function
  ✓ localStorage for theme

═══════════════════════════════════════════════════════════

🎯 WHAT'S NEEDED - IMPLEMENTATION PHASES
═══════════════════════════════════════════════════════════

PHASE 1: Layout Restructure (30-40 min)
  • Convert horizontal tabs to sidebar navigation
  • Add top bar with page title
  • Mobile hamburger menu
  • Theme toggle in sidebar footer

PHASE 2: Container Controls (15 min)
  • Add Start/Stop/Restart buttons to containers
  • Loading states for actions
  • Success/error feedback

PHASE 3: Polish & Testing (15 min)
  • Test light/dark theme toggle
  • Test mobile responsiveness
  • Test container actions
  • Verify all features still work

═══════════════════════════════════════════════════════════

📐 NEW LAYOUT STRUCTURE
═══════════════════════════════════════════════════════════

┌────────────────────────────────────────────────────────┐
│  SIDEBAR (240px)   │  MAIN CONTENT AREA                │
│  ┌───────────┐     │  ┌──────────────────────────────┐│
│  │ 🐳 Docker │     │  │  TOP BAR                     ││
│  │  Template │     │  │  Dashboard | [+ Create]      ││
│  │  Manager  │     │  └──────────────────────────────┘│
│  ├───────────┤     │                                   │
│  │ 📊 Dashbd │     │  CONTENT AREA                    │
│  │ 📄 Templts│◄────┼─ (Current tab content)           │
│  │ 📦 Contrs │     │                                   │
│  │ 💾 Backups│     │                                   │
│  ├───────────┤     │                                   │
│  │ 🌓 Theme  │     │                                   │
│  │ 🔓 Logout │     │                                   │
│  └───────────┘     │                                   │
└────────────────────────────────────────────────────────┘

Mobile View:
┌────────────────────────────────────┐
│  TOP BAR                     [☰]   │
├────────────────────────────────────┤
│  CONTENT (Full Width)              │
│                                    │
│  [Floating Menu Button]            │
└────────────────────────────────────┘

═══════════════════════════════════════════════════════════

🎨 THEME COMPARISON
═══════════════════════════════════════════════════════════

DARK MODE (Current):
  Background: #1b1b1b
  Cards: #2b2b2b
  Text: #e8e8e8
  Orange: #FF8C00

LIGHT MODE (New):
  Background: #f5f5f5
  Cards: #ffffff
  Text: #2b2b2b
  Orange: #FF8C00 (same)

Toggle Location: Sidebar footer with moon/sun icon

═══════════════════════════════════════════════════════════

🎮 CONTAINER CONTROLS
═══════════════════════════════════════════════════════════

Containers Tab - Each Row:
  ┌──────────────────────────────────────────────────┐
  │ 🟢 my-app  │  Image  │ Running  │ [▶][■][↻]    │
  └──────────────────────────────────────────────────┘
                                       ↑  ↑  ↑
                                    Start Stop Restart

Buttons:
  ▶ Start   - Green button (if stopped)
  ■ Stop    - Red button (if running)
  ↻ Restart - Orange button (always available)

States:
  • Loading: "Starting..." with spinner
  • Success: Green toast "Container started"
  • Error: Red toast "Failed to start"

═══════════════════════════════════════════════════════════

💻 IMPLEMENTATION CODE STRUCTURE
═══════════════════════════════════════════════════════════

React Component Structure:
  return (
    <div className="app-container">
      {/* Sidebar */}
      <aside className={`sidebar ${mobileMenuOpen ? 'mobile-open' : ''}`}>
        <div className="sidebar-header">
          <Logo />
          <Title />
        </div>
        
        <nav className="sidebar-nav">
          <NavItem icon="📊" label="Dashboard" active={tab === 'dashboard'} />
          <NavItem icon="📄" label="Templates" />
          <NavItem icon="📦" label="Containers" />
          <NavItem icon="💾" label="Backups" />
        </nav>
        
        <div className="sidebar-footer">
          <ThemeToggle />
          <LogoutButton />
        </div>
      </aside>

      {/* Mobile Overlay */}
      <div className="sidebar-overlay" onClick={closeMobile} />

      {/* Main Content */}
      <main className="main-content">
        <div className="top-bar">
          <h2>{currentPageTitle}</h2>
          <Actions />
        </div>
        
        <div className="content-wrapper">
          {renderCurrentTab()}
        </div>
        
        <footer>...</footer>
      </main>

      {/* Mobile Menu Button */}
      <button className="mobile-menu-button">☰</button>
    </div>
  );

═══════════════════════════════════════════════════════════

🔧 CONTAINER CONTROL HANDLERS
═══════════════════════════════════════════════════════════

const handleContainerAction = async (name, action) => {
  setLoading(true);
  try {
    const response = await fetchWithAuth(
      `${API_URL}/api/containers/${name}/${action}`,
      { method: 'POST' }
    );
    
    if (response.ok) {
      showToast(`Container ${action}ed successfully`, 'success');
      fetchContainers(); // Refresh list
    } else {
      showToast(`Failed to ${action} container`, 'error');
    }
  } catch (error) {
    showToast('Error performing action', 'error');
  }
  setLoading(false);
};

Button Rendering:
  {container.status === 'running' ? (
    <>
      <button onClick={() => handleContainerAction(name, 'stop')}>
        ■ Stop
      </button>
      <button onClick={() => handleContainerAction(name, 'restart')}>
        ↻ Restart
      </button>
    </>
  ) : (
    <button onClick={() => handleContainerAction(name, 'start')}>
      ▶ Start
    </button>
  )}

═══════════════════════════════════════════════════════════

📱 MOBILE MENU HANDLER
═══════════════════════════════════════════════════════════

const toggleMobileMenu = () => {
  setMobileMenuOpen(prev => !prev);
};

const closeMobileMenu = () => {
  setMobileMenuOpen(false);
};

// Close menu when navigating
const handleNavClick = (tab) => {
  setActiveTab(tab);
  closeMobileMenu();
};

═══════════════════════════════════════════════════════════

✨ BENEFITS OF NEW LAYOUT
═══════════════════════════════════════════════════════════

Better UX:
  ✓ Familiar *arr-style navigation
  ✓ More screen space for content
  ✓ Professional appearance
  ✓ Easier navigation
  ✓ Mobile-friendly

New Features:
  ✓ Light/Dark theme toggle
  ✓ Start/Stop/Restart containers
  ✓ Better mobile menu
  ✓ Persistent navigation
  ✓ Room for future features

═══════════════════════════════════════════════════════════

⏱️ TIME ESTIMATE
═══════════════════════════════════════════════════════════

Phase 1 (Layout):      30-40 minutes
Phase 2 (Containers):  15 minutes
Phase 3 (Polish):      15 minutes
───────────────────────────────────
Total:                 60-70 minutes

═══════════════════════════════════════════════════════════

🎯 DECISION POINT
═══════════════════════════════════════════════════════════

This is a major UI overhaul. Options:

A) Implement now (1 hour work)
   • Complete redesign
   • All features in one go
   • Test thoroughly

B) Phase it (safer)
   • Phase 1: Add container controls to current UI
   • Phase 2: Add theme toggle
   • Phase 3: Redesign layout

C) Keep current, enhance
   • Just add container controls
   • Add theme toggle button
   • Keep horizontal tabs

RECOMMENDATION: Option A
  Why: Backend already done, CSS ready, 
       just need to update React structure.
       Best time to do it is now!

═══════════════════════════════════════════════════════════

🚀 READY TO IMPLEMENT?
═══════════════════════════════════════════════════════════

Backend: ✅ DONE (start/stop/restart endpoints)
CSS: ✅ DONE (new layout + light mode)
React: ⏳ PENDING (needs restructure)

Say "yes" and I'll implement the full redesign!
Or tell me which option you prefer: A, B, or C

═══════════════════════════════════════════════════════════
